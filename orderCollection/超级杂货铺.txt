一. 那几个总是用来用去的css重置
    *{
        margin: 0;
        padding: 0;
    }
    body {
        font-family: '微软雅黑',YaHei,tahoma,arial;
        color: #fff;
        margin: 0;
        background-color: rgb(242,238,233);
        font-size: 14px;
        max-width: 750px;
        color: #666;
        margin: 0 auto;
    }
    a,a:hover,a:active{
        color: #666;
        text-decoration: none;
        -webkit-outline:none;
        -moz-outline:none;
        -ms-outline:none;
        -o-outline:none;
        outline:none;
    }
    a,img,button,input,textarea,span,div{
        -webkit-tap-highlight-color:rgba(255,255,255,0);
        -webkit-user-select: none;/*禁用手机浏览器的用户选择功能 */
        -moz-user-select: none;
    }
    .f-l {
        float: left;
        display: inline;
    }

    .f-r {
        float: right;
        display: inline;
    }

    .clearfloat:after {
        display: block;
        clear: both;
        content: ".";
        visibility: hidden;
        height: 0;
    }

    .clearfloat {
        zoom: 1;
    }

二 . 图片压缩
      PNG:  https://tinypng.com/

三 . 就是那个检索存在问题

    var str = '一个数组,比如说就看看有逗号么,有就把它们分开';

    if(str.indexOf(",") > -1){
        str.split(',');     //现在str是一个数组了
    }

    str.join('系不系傻')    //现在又被我拼成字符串了

四. 要闭着眼都会写的
    （function($){
           $(function(){
                function Name (){
                    this.access_token = "";

                };

           $.extend(Name.prototype, {
                 init: function () {
                     var self = this;
                     self.events();

                     //判断用户状态
                     var locationSearch = location.search,queryStr;

                                     if(locationSearch.indexOf("query=")>-1){
                                         if(locationSearch.indexOf("&") > -1){
                                             var urlArr = locationSearch.split("&");
                                             $.each(urlArr,function (k,v) {
                                                 if(v.indexOf("query=") > -1){
                                                     queryStr = v.split("query=")[1];
                                                 }
                                             });
                                         }else{
                                             queryStr = locationSearch.split("query=")[1];
                                         }
                                     }

                                     if(queryStr == "nologin"){
                                         $(".dragonBoat-prize-chance").hide();
                                         window.maskControl("tip", "请登录后尝试", 2000);

                                     }else if(queryStr == "update"){
                                         $(".dragonBoat-prize-chance").hide();
                                         window.maskControl("tip", "版本过低,请更新至最高版本", 2000);

                                     }else if(queryStr == "null"){
                                         $(".dragonBoat-prize-chance").hide();

                                         window.maskControl("tip", "请登录后尝试", 2000);

                                     }else{
                                         if(!!queryStr){
                                             self.isLogin = true;
                                             self.access_token = queryStr;
                                             $(".dragonBoat-prize-chance").show();

                                         }
                                     }

                 },
                 events : function(){
                    var self = this;

                    $('').on('click',function(){

                    })
                 },

                 getAjax : function(){
                    url :   "/address?access_token=" + self.access_token;
                    ...
                 })
           })
    })(jQuery)

六 . backboneJS记不住的梗
    1. 模型中的数据 this.model.attributes.name
    2. _.clone() .off() 可能会用到哟
    3. $this = $(e.currentTarget);
    4. this.model.set
    5. Backbone.history.start({pushState: true, root : "/"});6
    6. 就是那个牛掰的异步
        var studentView = Backbone.View.extend({

                el: '.wrapper-contain-body',
                initialize: function () {
                    var that = this;
                    //开始了
                    this.getAjax(function (data) {
                                            that.render(data);
                                        });
                    that.bindEvent();
                },
                render: function (data) {

                },
                bindEvent: function () {
                    var that = this;
                },

                getAjax : function(){
                    $.ajax({
                        url : '',
                        type : 'GET',
                        data : {},
                        success : function(data){

                            //获取到数据就这么做
                            var studentList = [];

                            if (callBack && typeof callBack == "function") {
                                studentList = res;
                                callBack(studentList);
                            }
                        }
                    })
                }

            });

七. 获取用户状态--封装的方法
    function getUrlParameter(sParam) {
                    var sPageURL = decodeURIComponent(window.location.search.substring(1)),
                        sURLVariables = sPageURL.split('&'),
                        sParameterName,
                        i;

                    for (i = 0; i < sURLVariables.length; i++) {
                        sParameterName = sURLVariables[i].split('=');

                        if (sParameterName[0] === sParam) {
                            return sParameterName[1] === undefined ? true : sParameterName[1];
                        }
                    }

                };


     使用方法:
       if( getUrlParameter(access_token) && getUrlParameter(access_token)!=null);

八 时间处理
       //个人成果

        window.timeTransform = function (time) {
            var passTime = (new Date() - new Date(time)) / 1000;

            if (passTime < 60) {
                return '刚刚';
            } else if ((passTime / 60) < 60) {
                var minute = parseInt(passTime / 60);
                return minute + '分钟前';
            } else if ((passTime / 3600) < 24) {
                var hour = parseInt(passTime / 3600);
                return hour + '小时前';
            } else if ((passTime / 86400) < 30) {
                var day = parseInt(passTime / 86400);
                return day + '天前';
            } else if ((passTime / 2592000) < 12) {
                var month = parseInt(passTime / 2592000);
                return month + '个月前';
            } else {
                var createTime = new Date(time),
                    year = createTime.getFullYear(),
                    month = createTime.getMonth() + 1,
                    date = createTime.getDate();

                return year + '年' + month + '月' + date + '日';
            }
        };

九 本地浏览记录去重和添加元素
             //个人成果
             //这里是对localHistory.historyData做了插入和去重检测
          window.localHistory = function (str) {
              var userSearch = localStorage.historyData,
                  newUserSearch = [];

              if (!!userSearch) {
                  newUserSearch = JSON.parse(userSearch);
                  if (newUserSearch.length > 0) {
                      if (arguments.length == 1) {
                          newUserSearch.unshift(str);
                      }

                      if (newUserSearch.length > 2) {
                          var hash = {},
                              len = newUserSearch.length,
                              result = [];
                          for (var i = 0; i < len; i++) {
                              if (!hash[newUserSearch[i]]) {
                                  hash[newUserSearch[i]] = true;
                                  result.push(newUserSearch[i]);
                              }
                          }
                          newUserSearch = result;
                      }

                  } else {
                      if (arguments.length == 1) {
                          newUserSearch[0] = str;
                      } else {
                          return false;
                      }
                  }
              } else {
                  if (arguments.length == 1) {
                      newUserSearch[0] = str;
                  } else {
                      return false;
                  }
              }

              userSearch = JSON.stringify(newUserSearch);
              localStorage.historyData = userSearch;
          };

十  数据克隆
          window.clone = function(obj) {
              var o;
              if (typeof obj == "object") {
                  if (obj === null) {
                      o = null;
                  } else {
                      if (obj instanceof Array) {
                          o = [];
                          for (var i = 0, len = obj.length; i < len; i++) {
                              o.push(clone(obj[i]));
                          }
                      } else {
                          o = {};
                          for (var j in obj) {
                              o[j] = clone(obj[j]);
                          }
                      }
                  }
              } else {
                  o = obj;
              }
              return o;
          };


          用法 var str = clone('json格式的数据');